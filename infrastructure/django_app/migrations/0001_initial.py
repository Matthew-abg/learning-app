# Generated by Django 5.2.7 on 2025-10-23 15:32

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='LearningContentModel',
            fields=[
                ('id', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('data', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='LearningBlockModel',
            fields=[
                ('id', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('state', models.CharField(choices=[('locked', 'Locked'), ('available', 'Available'), ('in_progress', 'In_Progress'), ('paused', 'Paused'), ('done', 'Done'), ('failed', 'Failed')], default='locked', max_length=20)),
                ('xp', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('content', models.ManyToManyField(related_name='blocks', to='infra_app.learningcontentmodel')),
            ],
        ),
        migrations.CreateModel(
            name='LearningUnitModel',
            fields=[
                ('id', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('lesson', 'Lesson'), ('exercise', 'Exercise'), ('quiz', 'Quiz'), ('mixed', 'Mixed')], default='lesson', max_length=20)),
                ('state', models.CharField(choices=[('locked', 'Locked'), ('available', 'Available'), ('in_progress', 'In_Progress'), ('paused', 'Paused'), ('done', 'Done'), ('failed', 'Failed')], default='locked', max_length=20)),
                ('xp', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('blocks', models.ManyToManyField(related_name='units', to='infra_app.learningblockmodel')),
            ],
        ),
    ]
